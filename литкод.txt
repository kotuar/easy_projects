#include <iostream>
#include <string.h>

using namespace std;
class Solution {
public: 
    int mergeTwoLists(string list1, string list2) {

        int first = 0,second = 0,k = 0,n= 50;
        int* buff = new int [n] ;
        if (size(list2) == 1 && size(list1) == 0) {
            buff[0] = list2[0] - '0';
            return buff[0];
        }
        
        if (size(list1) == 1 && size(list2 )== 0) {
            buff[0] = list1[0] - '0';
            return buff[0];
        }
        if (size(list1) == 1 && size(list2) == 1) {
            buff[0] = list1[0] - '0';
            buff[1] = list2[0] - '0';
            return buff[0, 1];
        }
        for (int i = 0; i < size(list1) ; i++){
            if (list1[i] != ',') {
                first = (list1[i] - '0');
                if (list1[i + 1] != ',') {
                    second = (list1[i + 1] - '0');
                    buff[k] = ((10 * first) + second);
                    k++; i += 2;
                }
                else {
                    buff[k] = first;
                    k++; i++;
                }
            }
        }
        for (int i = 0; i < size(list2); i++) {
            if (list2[i] != ',') {
                first = (list2[i] - '0');
                if (list2[i + 1] != ',') {
                    second = (list2[i + 1] - '0');
                    buff[k] = ((10 * first) + second);
                    k++; i += 2;
                }
                else {
                    buff[k] = first;
                    k++; i++;
                }
            }
        }
        for (int i = 0; i < 6; i++)
            for (int j = 0; j < 5; j++)
                if (buff[j] > buff[j + 1])
                    swap(buff[j], buff[j + 1]);
        return *buff;
    }
};

int main()
{
    Solution a;

    string list1{ "0" };
    string list2{ "0" };
    cout <<a.mergeTwoLists(list1,list2);
   
}

